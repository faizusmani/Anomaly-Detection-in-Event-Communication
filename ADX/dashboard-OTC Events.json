{"$schema":"https://dataexplorer.azure.com/static/d/schema/47/dashboard.json","id":"20c0940e-1d17-4696-9051-661e2d055efd","eTag":"2ae36427-51f5-4fbf-8c86-3517a65ecf0e","schema_version":"47","title":"OTC Events","autoRefresh":{"enabled":false},"baseQueries":[],"tiles":[{"id":"54f3e18a-7434-4fa7-9a5c-6521eff4fefc","title":"Total Events per Hour","description":"","visualType":"line","pageId":"87eb1782-eaa3-4cf8-8797-f43f68aa674b","layout":{"x":0,"y":8,"width":12,"height":7},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"f5f41eb2-98a7-4109-a129-3b694bcb4d13"},"usedVariables":[],"text":"// Please enter your KQL query (Example):\n// <table name>\n// | where <datetime column> between (['_startTime'] .. ['_endTime']) // Time range filtering\n// | take 100\nlet interval = 1h;\nlet stime = datetime(2023-07-31);\nlet etime = datetime(2023-08-30);\n['OTCevents'] \n| make-series eventCount=count() on timestamp from stime to etime step interval \n| render timechart \n"},"visualOptions":{"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"hideLegend":false,"xColumnTitle":"","xColumn":null,"yColumns":["eventCount"],"seriesColumns":null,"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[{"destinationPages":[],"disabled":false}]}},{"id":"49fc3aed-d4ca-4a30-a388-bab0b7276c5a","title":"Events per Hour by System","description":"","visualType":"area","pageId":"87eb1782-eaa3-4cf8-8797-f43f68aa674b","layout":{"x":12,"y":8,"width":12,"height":7},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"f5f41eb2-98a7-4109-a129-3b694bcb4d13"},"usedVariables":[],"text":"// Please enter your KQL query (Example):\n// <table name>\n// | where <datetime column> between (['_startTime'] .. ['_endTime']) // Time range filtering\n// | take 100\nlet interval = 1h;\nlet stime = datetime(2023-07-31);\nlet etime = datetime(2023-08-30);\n['OTCevents']  \n| make-series eventCount=count() on timestamp from stime to etime step interval by system\n| render timechart "},"visualOptions":{"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"hideLegend":false,"xColumnTitle":"","xColumn":null,"yColumns":["eventCount"],"seriesColumns":["system"],"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":true,"drillthroughDisabled":false,"crossFilter":[{"disabled":false}],"drillthrough":[]}},{"id":"29dd4d64-dd6b-4fb5-bc46-b9f886befb86","title":"Events per Hour by Phase","description":"","visualType":"area","pageId":"87eb1782-eaa3-4cf8-8797-f43f68aa674b","layout":{"x":0,"y":15,"width":12,"height":8},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"f5f41eb2-98a7-4109-a129-3b694bcb4d13"},"usedVariables":[],"text":"// Please enter your KQL query (Example):\n// <table name>\n// | where <datetime column> between (['_startTime'] .. ['_endTime']) // Time range filtering\n// | take 100\nlet interval = 1h;\nlet stime = datetime(2023-07-31);\nlet etime = datetime(2023-08-30);\n['OTCevents']  \n| make-series eventCount=count() on timestamp from stime to etime step interval by eventPhase\n| render timechart "},"visualOptions":{"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"hideLegend":false,"xColumnTitle":"","xColumn":"timestamp","yColumns":["eventCount"],"seriesColumns":["eventPhase"],"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":true,"drillthroughDisabled":false,"crossFilter":[{"disabled":false}],"drillthrough":[]}},{"id":"a7f60e42-eca8-4670-9773-725a9068b1ac","title":"Events per Hour by EventIDs","description":"","visualType":"line","pageId":"87eb1782-eaa3-4cf8-8797-f43f68aa674b","layout":{"x":12,"y":15,"width":12,"height":8},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"f5f41eb2-98a7-4109-a129-3b694bcb4d13"},"usedVariables":[],"text":"// Please enter your KQL query (Example):\n// <table name>\n// | where <datetime column> between (['_startTime'] .. ['_endTime']) // Time range filtering\n// | take 100\nlet interval = 1h;\nlet stime = datetime(2023-07-31);\nlet etime = datetime(2023-08-30);\n['OTCevents']  \n| make-series eventCount=count() on timestamp from stime to etime step interval by eventIDCompact\n| render timechart "},"visualOptions":{"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"hideLegend":false,"xColumnTitle":"","xColumn":"timestamp","yColumns":["eventCount"],"seriesColumns":["eventIDCompact"],"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":true,"drillthroughDisabled":false,"crossFilter":[{"disabled":false}],"drillthrough":[]}},{"id":"87ee3275-a667-42c5-a177-509c996b5e08","title":"Total Events","description":"","visualType":"card","pageId":"87eb1782-eaa3-4cf8-8797-f43f68aa674b","layout":{"x":0,"y":0,"width":5,"height":8},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"f5f41eb2-98a7-4109-a129-3b694bcb4d13"},"usedVariables":[],"text":"// Please enter your KQL query (Example):\n// <table name>\n// | where <datetime column> between (['_startTime'] .. ['_endTime']) // Time range filtering\n// | take 100\n\n['OTCevents'] \n| count "},"visualOptions":{"multiStat__textSize":"auto","multiStat__valueColumn":null,"colorRulesDisabled":false,"colorRules":[],"colorStyle":"light"}},{"id":"c07032d3-969f-4126-9b0b-e20908cdab40","title":"Total Events where Retry Happened","description":"","visualType":"card","pageId":"5ef2da02-8a36-49d5-809b-d8b3006b62f4","layout":{"x":0,"y":0,"width":14,"height":3},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"f5f41eb2-98a7-4109-a129-3b694bcb4d13"},"usedVariables":[],"text":"// Please enter your KQL query (Example):\n// <table name>\n// | where <datetime column> between (['_startTime'] .. ['_endTime']) // Time range filtering\n// | take 100\n\n['OTCevents'] \n| where retryCounter > 0\n| count "},"visualOptions":{"multiStat__textSize":"auto","multiStat__valueColumn":null,"colorRulesDisabled":false,"colorRules":[],"colorStyle":"light"}},{"id":"63536343-3636-46dc-963f-d68d293b6648","title":"Time Series of Events where Retries happened (per hour)","description":"","visualType":"line","pageId":"5ef2da02-8a36-49d5-809b-d8b3006b62f4","layout":{"x":0,"y":3,"width":14,"height":7},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"f5f41eb2-98a7-4109-a129-3b694bcb4d13"},"usedVariables":[],"text":"// Please enter your KQL query (Example):\n// <table name>\n// | where <datetime column> between (['_startTime'] .. ['_endTime']) // Time range filtering\n// | take 100\nlet interval = 1h;\nlet stime = datetime(2023-07-31);\nlet etime = datetime(2023-08-30);\n['OTCevents'] \n| where retryCounter > 0\n| make-series eventCount=count() on timestamp from stime to etime step interval \n"},"visualOptions":{"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"hideLegend":false,"xColumnTitle":"","xColumn":"timestamp","yColumns":null,"seriesColumns":null,"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[]}},{"id":"7cfc10e4-8904-4958-b5cc-00878e3e4575","title":"Number of events per Retry Counter (1-15) ","description":"","visualType":"column","pageId":"5ef2da02-8a36-49d5-809b-d8b3006b62f4","layout":{"x":14,"y":0,"width":10,"height":6},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"f5f41eb2-98a7-4109-a129-3b694bcb4d13"},"usedVariables":[],"text":"// Please enter your KQL query (Example):\n// <table name>\n// | where <datetime column> between (['_startTime'] .. ['_endTime']) // Time range filtering\n// | take 100\n['OTCevents'] \n| summarize Retries = count() by retryCounter\n"},"visualOptions":{"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"hideLegend":false,"xColumnTitle":"","xColumn":"retryCounter","yColumns":["retryCounter","Retries"],"seriesColumns":null,"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[]}},{"id":"70bbf7a2-e819-4432-8dff-9327951a9cf3","title":"Summation of Latency in Seconds per hour","description":"","visualType":"line","pageId":"8a10e295-e433-430d-9a3e-ddcb485c3458","layout":{"x":0,"y":6,"width":14,"height":6},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"f5f41eb2-98a7-4109-a129-3b694bcb4d13"},"usedVariables":[],"text":"// Please enter your KQL query (Example):\n// <table name>\n// | where <datetime column> between (['_startTime'] .. ['_endTime']) // Time range filtering\n// | take 100\nlet interval = 1h;\nlet stime = datetime(2023-07-31);\nlet etime = datetime(2023-08-30);\n['OTCevents'] \n| make-series eventCount=sum(latencyInSeconds) on timestamp from stime to etime step interval "},"visualOptions":{"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"hideLegend":false,"xColumnTitle":"","xColumn":"timestamp","yColumns":null,"seriesColumns":null,"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[]}},{"id":"5f55a790-1bcc-4547-86f9-695fda3c822e","title":"Summation of Latency in Seconds by Event IDs","description":"","visualType":"column","pageId":"8a10e295-e433-430d-9a3e-ddcb485c3458","layout":{"x":4,"y":0,"width":10,"height":6},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"f5f41eb2-98a7-4109-a129-3b694bcb4d13"},"usedVariables":[],"text":"// Please enter your KQL query (Example):\n// <table name>\n// | where <datetime column> between (['_startTime'] .. ['_endTime']) // Time range filtering\n// | take 100\nlet interval = 1h;\nlet stime = datetime(2023-07-31);\nlet etime = datetime(2023-08-30);\n['OTCevents'] \n| summarize TotalLatency = sum(latencyInSeconds) by eventIDCompact\n| sort by TotalLatency"},"visualOptions":{"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"hideLegend":false,"xColumnTitle":"","xColumn":"eventIDCompact","yColumns":null,"seriesColumns":null,"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[]}},{"id":"a427c8f8-e19e-40ca-b746-7fd7b61882b4","title":"Top 10 occurences of Sum (Latency) per Hour","description":"","visualType":"table","pageId":"8a10e295-e433-430d-9a3e-ddcb485c3458","layout":{"x":14,"y":0,"width":10,"height":6},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"f5f41eb2-98a7-4109-a129-3b694bcb4d13"},"usedVariables":[],"text":"// Please enter your KQL query (Example):\n// <table name>\n// | where <datetime column> between (['_startTime'] .. ['_endTime']) // Time range filtering\n// | take 100\nlet interval = 1h;\nlet stime = datetime(2023-07-31);\nlet etime = datetime(2023-08-30);\n['OTCevents'] \n| where timestamp  between (stime..etime) \n| summarize LatencySum = sum(latencyInSeconds) by bin(timestamp, 1h), eventIDCompact, eventPhase \n| sort by LatencySum desc \n| top 10 by LatencySum"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"ac2548be-25a8-4ea9-a15d-0d831318b447","title":"Top 30 occurences of Sum (Latency) per Minute","description":"","visualType":"table","pageId":"8a10e295-e433-430d-9a3e-ddcb485c3458","layout":{"x":14,"y":6,"width":10,"height":6},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"f5f41eb2-98a7-4109-a129-3b694bcb4d13"},"usedVariables":[],"text":"// Please enter your KQL query (Example):\n// <table name>\n// | where <datetime column> between (['_startTime'] .. ['_endTime']) // Time range filtering\n// | take 100\nlet interval = 1h;\nlet stime = datetime(2023-07-31);\nlet etime = datetime(2023-08-30);\n['OTCevents'] \n| where timestamp  between (stime..etime) \n| summarize LatencySum = sum(latencyInSeconds) by bin(timestamp, 1m), eventIDCompact, eventPhase \n| sort by LatencySum desc \n| top 30 by LatencySum"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"67c35300-1d94-4de4-9cd4-5531765a2090","title":"Top 10 occurrences of Retry Counter per Hour","description":"","visualType":"table","pageId":"5ef2da02-8a36-49d5-809b-d8b3006b62f4","layout":{"x":0,"y":10,"width":14,"height":8},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"f5f41eb2-98a7-4109-a129-3b694bcb4d13"},"usedVariables":[],"text":"// Please enter your KQL query (Example):\n// <table name>\n// | where <datetime column> between (['_startTime'] .. ['_endTime']) // Time range filtering\n// | take 100\nlet interval = 1h;\nlet stime = datetime(2023-07-31);\nlet etime = datetime(2023-08-30);\n['OTCevents'] \n| where timestamp  between (stime..etime) \n| where retryCounter > 0\n| summarize TotalRetries = count() by bin(timestamp, 1h), eventIDCompact, eventPhase \n| sort by TotalRetries desc \n| top 10 by TotalRetries"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"f6c8cbe1-171c-41b6-b1f4-a4bb39030817","title":"Top 30 occurrences of Retry Counter per Minute","description":"","visualType":"table","pageId":"5ef2da02-8a36-49d5-809b-d8b3006b62f4","layout":{"x":14,"y":12,"width":10,"height":6},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"f5f41eb2-98a7-4109-a129-3b694bcb4d13"},"usedVariables":[],"text":"// Please enter your KQL query (Example):\n// <table name>\n// | where <datetime column> between (['_startTime'] .. ['_endTime']) // Time range filtering\n// | take 100\nlet interval = 1h;\nlet stime = datetime(2023-07-31);\nlet etime = datetime(2023-08-30);\n['OTCevents'] \n| where timestamp  between (stime..etime) \n| where retryCounter > 0\n| summarize TotalRetries = count() by bin(timestamp, 1m), eventIDCompact, eventPhase \n| sort by TotalRetries desc \n| top 30 by TotalRetries"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"aa823737-4891-427e-b30f-e6664aad41cd","title":"Count of Retries by Event IDs","description":"","visualType":"column","pageId":"5ef2da02-8a36-49d5-809b-d8b3006b62f4","layout":{"x":14,"y":6,"width":10,"height":6},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"f5f41eb2-98a7-4109-a129-3b694bcb4d13"},"usedVariables":[],"text":"// Please enter your KQL query (Example):\n// <table name>\n// | where <datetime column> between (['_startTime'] .. ['_endTime']) // Time range filtering\n// | take 100\nlet interval = 1h;\nlet stime = datetime(2023-07-31);\nlet etime = datetime(2023-08-30);\n['OTCevents'] \n| where retryCounter > 0\n| summarize RetryCounts = count() by eventIDCompact\n| sort by RetryCounts"},"visualOptions":{"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"hideLegend":false,"xColumnTitle":"","xColumn":"eventIDCompact","yColumns":null,"seriesColumns":null,"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[]}},{"id":"67f0c952-b1ac-4a74-acf0-57e7acabbf0f","title":"Total Events by Event IDs","description":"","visualType":"column","pageId":"87eb1782-eaa3-4cf8-8797-f43f68aa674b","layout":{"x":5,"y":0,"width":10,"height":8},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"f5f41eb2-98a7-4109-a129-3b694bcb4d13"},"usedVariables":[],"text":"// Please enter your KQL query (Example):\n// <table name>\n// | where <datetime column> between (['_startTime'] .. ['_endTime']) // Time range filtering\n// | take 100\nlet interval = 1h;\nlet stime = datetime(2023-07-31);\nlet etime = datetime(2023-08-30);\n['OTCevents'] \n| summarize EventCount = count() by eventIDCompact\n| sort by EventCount"},"visualOptions":{"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"hideLegend":false,"xColumnTitle":"","xColumn":"eventIDCompact","yColumns":null,"seriesColumns":null,"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[]}},{"id":"ffffa463-42fb-42be-9ab5-ae2c1c2ed1d0","title":"Total Events by System","description":"","visualType":"bar","pageId":"87eb1782-eaa3-4cf8-8797-f43f68aa674b","layout":{"x":15,"y":0,"width":9,"height":4},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"f5f41eb2-98a7-4109-a129-3b694bcb4d13"},"usedVariables":[],"text":"// Please enter your KQL query (Example):\n// <table name>\n// | where <datetime column> between (['_startTime'] .. ['_endTime']) // Time range filtering\n// | take 100\nlet interval = 1h;\nlet stime = datetime(2023-07-31);\nlet etime = datetime(2023-08-30);\n['OTCevents'] \n| summarize EventCount = count() by system\n| sort by EventCount"},"visualOptions":{"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"hideLegend":false,"xColumnTitle":"","xColumn":"system","yColumns":null,"seriesColumns":null,"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[]}},{"id":"d6942dc9-1a00-4bdd-b110-44edad0eb504","title":"Total Events by Event Phase","description":"","visualType":"bar","pageId":"87eb1782-eaa3-4cf8-8797-f43f68aa674b","layout":{"x":15,"y":4,"width":9,"height":4},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"f5f41eb2-98a7-4109-a129-3b694bcb4d13"},"usedVariables":[],"text":"// Please enter your KQL query (Example):\n// <table name>\n// | where <datetime column> between (['_startTime'] .. ['_endTime']) // Time range filtering\n// | take 100\nlet interval = 1h;\nlet stime = datetime(2023-07-31);\nlet etime = datetime(2023-08-30);\n['OTCevents'] \n| summarize EventCount = count() by eventPhase\n| sort by EventCount"},"visualOptions":{"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"hideLegend":false,"xColumnTitle":"","xColumn":"eventPhase","yColumns":null,"seriesColumns":null,"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[]}},{"id":"5f54149c-c200-4f28-8877-49584e212245","title":"Retries per Hour by Phase","description":"","visualType":"area","pageId":"5ef2da02-8a36-49d5-809b-d8b3006b62f4","layout":{"x":0,"y":18,"width":14,"height":7},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"f5f41eb2-98a7-4109-a129-3b694bcb4d13"},"usedVariables":[],"text":"// Please enter your KQL query (Example):\n// <table name>\n// | where <datetime column> between (['_startTime'] .. ['_endTime']) // Time range filtering\n// | take 100\nlet interval = 1h;\nlet stime = datetime(2023-07-31);\nlet etime = datetime(2023-08-30);\n['OTCevents']  \n| where  retryCounter > 0\n| make-series eventCount=count() on timestamp from stime to etime step interval by eventPhase\n| render timechart "},"visualOptions":{"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"hideLegend":false,"xColumnTitle":"","xColumn":"timestamp","yColumns":["eventCount"],"seriesColumns":["eventPhase"],"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":true,"drillthroughDisabled":false,"crossFilter":[{"disabled":false}],"drillthrough":[]}},{"id":"d65359fa-8211-4ca5-9eb3-75f0bd4a979b","title":"Retries per Hour by System","description":"","visualType":"area","pageId":"5ef2da02-8a36-49d5-809b-d8b3006b62f4","layout":{"x":14,"y":18,"width":10,"height":7},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"f5f41eb2-98a7-4109-a129-3b694bcb4d13"},"usedVariables":[],"text":"// Please enter your KQL query (Example):\n// <table name>\n// | where <datetime column> between (['_startTime'] .. ['_endTime']) // Time range filtering\n// | take 100\nlet interval = 1h;\nlet stime = datetime(2023-07-31);\nlet etime = datetime(2023-08-30);\n['OTCevents']  \n| where retryCounter > 0\n| make-series eventCount=count() on timestamp from stime to etime step interval by system\n| render timechart "},"visualOptions":{"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"hideLegend":false,"xColumnTitle":"","xColumn":null,"yColumns":["eventCount"],"seriesColumns":["system"],"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":true,"drillthroughDisabled":false,"crossFilter":[{"disabled":false}],"drillthrough":[]}},{"id":"0f32aed0-6b9a-45f7-a010-71bffda12ce3","title":"Retries per Hour by EventIDs","description":"","visualType":"line","pageId":"5ef2da02-8a36-49d5-809b-d8b3006b62f4","layout":{"x":0,"y":25,"width":24,"height":8},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"f5f41eb2-98a7-4109-a129-3b694bcb4d13"},"usedVariables":[],"text":"// Please enter your KQL query (Example):\n// <table name>\n// | where <datetime column> between (['_startTime'] .. ['_endTime']) // Time range filtering\n// | take 100\nlet interval = 1h;\nlet stime = datetime(2023-07-31);\nlet etime = datetime(2023-08-30);\n['OTCevents']  \n| where retryCounter > 0\n| make-series eventCount=count() on timestamp from stime to etime step interval by eventIDCompact\n| render timechart "},"visualOptions":{"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"hideLegend":false,"xColumnTitle":"","xColumn":"timestamp","yColumns":["eventCount"],"seriesColumns":["eventIDCompact"],"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":true,"drillthroughDisabled":false,"crossFilter":[{"disabled":false}],"drillthrough":[]}},{"id":"f21d88b9-46b2-4b6a-8bad-30918e984350","title":"Events where Latency was present","description":"Events where Latency was present","visualType":"card","pageId":"8a10e295-e433-430d-9a3e-ddcb485c3458","layout":{"x":0,"y":0,"width":4,"height":6},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"f5f41eb2-98a7-4109-a129-3b694bcb4d13"},"usedVariables":[],"text":"// Please enter your KQL query (Example):\n// <table name>\n// | where <datetime column> between (['_startTime'] .. ['_endTime']) // Time range filtering\n// | take 100\n\n['OTCevents'] \n| where latencyInSeconds > 0\n| count "},"visualOptions":{"multiStat__textSize":"auto","multiStat__valueColumn":null,"colorRulesDisabled":false,"colorRules":[{"id":"a85f2cdd-0a04-461a-bd47-014e7d5783da","ruleType":"colorByCondition","applyToColumn":null,"hideText":false,"applyTo":"cells","conditions":[{"column":null,"operator":">","values":[""]}],"chainingOperator":"and","visualType":"stat","colorStyle":"bold","color":null,"tag":"","icon":null,"ruleName":""}],"colorStyle":"light"}},{"id":"d8948ebe-e381-4c0f-97db-f898c4b373e6","title":"STL Decomposition","description":"","visualType":"timechart","pageId":"15e3fd64-0238-4a93-94ca-881b946a1392","layout":{"x":0,"y":0,"width":22,"height":7},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"f5f41eb2-98a7-4109-a129-3b694bcb4d13"},"usedVariables":[],"text":"// Please enter your KQL query (Example):\n// <table name>\n// | where <datetime column> between (['_startTime'] .. ['_endTime']) // Time range filtering\n// | take 100\nlet interval = 1h;\nlet stime = datetime(2023-07-31);\nlet etime = datetime(2023-08-30);\n['OTCevents'] \n| make-series eventCount=count() on timestamp from stime to etime step interval \n| extend (5_baseline, 2_seasonal, 3_trend, 4_residual) = series_decompose(eventCount, 168, 'linefit')\n| render timechart with(title='STL Decomposition', ysplit=panels)\n"},"visualOptions":{"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"hideLegend":false,"xColumnTitle":"","xColumn":null,"yColumns":null,"seriesColumns":null,"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[]}},{"id":"b0881caf-027d-4cb1-9ceb-21520e5a0db5","title":"Identified Anomalies using STL","description":"","visualType":"anomalychart","pageId":"15e3fd64-0238-4a93-94ca-881b946a1392","layout":{"x":0,"y":7,"width":22,"height":7},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"f5f41eb2-98a7-4109-a129-3b694bcb4d13"},"usedVariables":[],"text":"// Please enter your KQL query (Example):\n// <table name>\n// | where <datetime column> between (['_startTime'] .. ['_endTime']) // Time range filtering\n// | take 100\nlet interval = 1h;\nlet stime = datetime(2023-07-31);\nlet etime = datetime(2023-08-30);\n['OTCevents'] \n| make-series eventCount=count() on timestamp from stime to etime step interval \n| extend (anomalies, score, baseline) = series_decompose_anomalies(eventCount, 1.5, 168, 'linefit')\n| render anomalychart with(anomalycolumns=anomalies)"},"visualOptions":{"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"hideLegend":false,"xColumnTitle":"","xColumn":null,"yColumns":null,"seriesColumns":null,"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[]}},{"id":"870a7148-bfe9-418f-a5c5-98a3b383863e","title":"Clustering (for identifying patterns in anomalous time window)","description":"","visualType":"table","pageId":"15e3fd64-0238-4a93-94ca-881b946a1392","layout":{"x":0,"y":14,"width":22,"height":6},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"f5f41eb2-98a7-4109-a129-3b694bcb4d13"},"usedVariables":[],"text":"// Please enter your KQL query (Example):\n// <table name>\n// | where <datetime column> between (['_startTime'] .. ['_endTime']) // Time range filtering\n// | take 100\nlet stime = datetime(2023-08-09 14:00);\nlet etime = datetime(2023-08-09 20:00);\n['OTCevents'] \n| where timestamp between (stime..etime) \n| evaluate autocluster()\n| project-away timestamp, eventIDSteps"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"ed6f000c-a0fe-4fff-8daf-9f44aded92fa","title":"Pattern Difference between Anomalous and Normal Timestamps","description":"","visualType":"table","pageId":"15e3fd64-0238-4a93-94ca-881b946a1392","layout":{"x":0,"y":20,"width":22,"height":7},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"f5f41eb2-98a7-4109-a129-3b694bcb4d13"},"usedVariables":[],"text":"// Please enter your KQL query (Example):\n// <table name>\n// | where <datetime column> between (['_startTime'] .. ['_endTime']) // Time range filtering\n// | take 100\nlet stime = datetime(2023-08-09 14:00);\nlet etime = datetime(2023-08-09 20:00);\nlet s1time = datetime(2023-08-08 00:00);\nlet e1time = datetime(2023-08-09 13:58);\nlet splitime = (e1time+stime)/2.0;\n['OTCevents'] \n| where (timestamp between (stime..etime)) or (timestamp between (s1time..e1time)) \n| extend AB = iff(timestamp>splitime,'Anomaly','Baseline')\n| project-away timestamp, eventIDSteps\n| evaluate diffpatterns(AB,'Anomaly','Baseline')\n"},"visualOptions":{"table__enableRenderLinks":true,"colorRules":[],"colorRulesDisabled":true,"colorStyle":"light","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[],"table__renderLinks":[]}},{"id":"5fb4a41e-626b-4e10-a289-3e4ba73aefe2","title":"Time Series segregating Normal and Anomalous Parameters","description":"","visualType":"timechart","pageId":"15e3fd64-0238-4a93-94ca-881b946a1392","layout":{"x":0,"y":27,"width":22,"height":6},"query":{"kind":"inline","dataSource":{"kind":"inline","dataSourceId":"f5f41eb2-98a7-4109-a129-3b694bcb4d13"},"usedVariables":[],"text":"// Please enter your KQL query (Example):\n// <table name>\n// | where <datetime column> between (['_startTime'] .. ['_endTime']) // Time range filtering\n// | take 100\nlet interval = 1h;\nlet stime = datetime(2023-07-31);\nlet etime = datetime(2023-08-30);\n['OTCevents'] \n| extend seg = iff(system=='System2' and eventPhase == 'Contract' and latencyInSeconds != 0,'Problem','Normal') \n| make-series eventCount=count() on timestamp from stime to etime step interval by seg\n| render timechart "},"visualOptions":{"multipleYAxes":{"base":{"id":"-1","label":"","columns":[],"yAxisMaximumValue":null,"yAxisMinimumValue":null,"yAxisScale":"linear","horizontalLines":[]},"additional":[],"showMultiplePanels":false},"hideLegend":false,"xColumnTitle":"","xColumn":null,"yColumns":null,"seriesColumns":null,"xAxisScale":"linear","verticalLine":"","crossFilterDisabled":false,"drillthroughDisabled":false,"crossFilter":[],"drillthrough":[]}}],"parameters":[{"kind":"duration","id":"5b5556f0-74f9-4b98-96c7-b6aa04a5ea5e","displayName":"Time range","description":"","beginVariableName":"_startTime","endVariableName":"_endTime","defaultValue":{"kind":"dynamic","count":1,"unit":"hours"},"showOnPages":{"kind":"all"}}],"dataSources":[{"id":"f5f41eb2-98a7-4109-a129-3b694bcb4d13","name":"OTC Events","clusterUri":"https://faizadxmyerscough.westeurope.kusto.windows.net/","database":"adxdb","kind":"manual-kusto","scopeId":"kusto"}],"pages":[{"name":"Time Series by Important Parameters","id":"87eb1782-eaa3-4cf8-8797-f43f68aa674b"},{"name":"Retries","id":"5ef2da02-8a36-49d5-809b-d8b3006b62f4"},{"name":"Latency in Seconds","id":"8a10e295-e433-430d-9a3e-ddcb485c3458"},{"name":"Analysis of Anomalies","id":"15e3fd64-0238-4a93-94ca-881b946a1392"}]}